##############################################################################
#
# awk program file
# for automatic generation of dependencies
#
# (c) T. Illenseer & J. Sauter 2010
#     last modification: 2016-11-18
##############################################################################
#
# input parameters:
#
#    builddir  : directory where .mod and .o files are stored
#                (with trailing slash!)
#
#    obs       : list of available object files  
#
##############################################################################
#
# example call sequence in a Makefile
#
#       awk -f makedeps -v objfiles=$(objfiles) builddir=./build/ *f90
#
##############################################################################
#
#
BEGIN { dependencies=""; objnum=split(objfiles,objlist)}
{
   # convert everything to lower case
   $0=tolower($0)
   if ((($1 ~/module/) && !($2 ~/procedure/)) \
       || ($1 ~/program/))
      target=builddir$2".o :"

   if (($1 ~/use/) && !($1 ~/!use/) && !($0 ~/intrinsic/))
   {
      module=$2
      sub(/,/,"",module)
      # uncomment for debugging
      # print "module=", module
      module=builddir module".o"
      # add module to the list of dependencies
      if ( !(dependencies ~ module)) {
         if (objnum == 0) dependencies=dependencies" \\\n\t"module
         else
           for (i=1; i<=objnum; i++) {
              if (module == builddir objlist[i]) \
                 dependencies=dependencies" \\\n\t"module
           }
      }
   }

   if ( ( ($1 ~/end/) && ( ($2 ~/module/) || ($2 ~/program/) ) ) \
        && !(dependencies == "") )
   {
      print target dependencies"\n"
      dependencies=""
   }
}
END {}
