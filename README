===============================================================================
Mol3d: 3D line and dust radiative transfer code

--------
author:         Florian Ober
version:        Sep 2014
email:          fober@astrophysik.uni-kiel.de

--------
Parts of this code are based on MC3D 

MC3D by S.Wolf 	[wolf@astrophysik.uni-kiel.de]
--------
===============================================================================

---
[A]  Preparations

This code needs cfitsio. Therefore, download it either from
http://heasarc.gsfc.nasa.gov/fitsio/fitsio.html 
or have a look into your favored linux distribution software archive.

Install cfitsio globally or into the directory 
above this Mol3d installation (e.g. './../cfitsio')

Intel Fortran compiler should give the best performence, but Gfortran
should also work.

-optional

This code uses OpenMP for parallelisation

[B] 
You have to (re-)compile the code:

>make new

The default compiler is Intel Fortran compiler.
You can change the compiler in the make process by

>make FC=gfortran new

For better performance we recommend to use:

>make CO=fast new

To use OpenMP:

>make CO=para new

For more options on the make process check out
>make help

[C]

Run the code:

>./mol3d

All input parameters are stored in the ./input/input.dat file.
Also it is possible to use another input file:

>./mol3d "/path/to/input-file""

The disk model can be changed by editing the ./src/model_f90 file.
Please do not forget to recompile the code afterwards.

In addition, all input settings can be adjusted by editing the
./src/initiate.f90 file

Please note: The code is still in development and bugs may exist!

[D]

Visualisation scripts are found in the 'visualize' folder. 
Python3 (matplotlib, numpy, astropy) is required.

There are 3 main routines to visualize your results:

>cd visualize
>./show_model.py "project_name"         # shows density, temperature and velocity maps

>./make_spectrum.py "project_name"      # shows spectra

>./visual_mol3d.py "project_name"       # shows everything (calls the routines above)

If you changed the result path in the input file, you also need to adjust
the file "path_results" in the visualize directory, or you can provide the path:

>./visual_mol3d.py "project_name" "results_path"


If you have further problems in running the code, please do not hesitate
to ask me.

You are free to use and extend this code, but if you do so,
please cite 'F. Ober 2014 (in prep)'
